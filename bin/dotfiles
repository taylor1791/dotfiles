#!/usr/bin/env bash

DOTFILES_DIR="${HOME}/.config/dotfiles"
HASH_DIR="${DOTFILES_DIR}/.observee_hashes"

# I have considered using GNU Make for a more robust dependency system.
# However, it does not come pre-installed everywhere.
function status() {
  # A fake associative array for our bash 3 "friends."
  declare -a files=(
    "setup/nix.sh:setup/nix.sh"
    "setup/nix-profile.sh:default.nix"
    "setup/preferences.sh:setup/preferences.sh"
  )

  declare file
  for file in "${files[@]}"; do
    declare rectifier="${file%%:*}"
    declare observee="${file#*:}"

    declare filename="$(basename "${observee}")"
    { declare current_hash="$(<${HASH_DIR}/${filename})"; } 2> /dev/null

    if [ "$(_md5 "${DOTFILES_DIR}/${observee}")" != "${current_hash}" ]; then

      if [[ "${1}" == "--auto" ]]; then
        run ${rectifier} ${observee}
      else
        warn "Dotfiles would like to update your system. Please run:"
        warn "  $ dotfiles run ${rectifier} ${observee}"
      fi
    fi
  done
}

function run() {
  if [[ "${1}" == "" ]]; then
    help
  fi

  if [[ "${2}" == "" ]]; then
    help
  fi

  ${DOTFILES_DIR}/${1}
  declare status="$?"

  declare filename="$(basename "${2}")"
  if [[ "${status}" == "0" ]]; then
    mkdir -p "${HASH_DIR}"
    _md5 "${DOTFILES_DIR}/${2}" > "${HASH_DIR}"/"${filename}"
  else
    warn "Execution failed. Now you gotta fix the script..."
    exit "${status}"
  fi
}

function reset() {
  rm -rf "${HASH_DIR}"
}

function help() {
  echo "USAGE: dotfiles (status|autorun|run <observee> <script>|reset)"
  echo ""
  echo "    status      Display pending updates and how to run them."
  echo "    autorun     Run all pending dotfiles updates."
  echo "    run <o> <s> Run a dotfiles update."
  echo "    reset       Forget ran scripts."
  exit 1
}

function _md5() {
  # Linux
  if command -v md5sum; then
    md5sum "${1}" 2> /dev/null
  # BSD
  elif command -v md5; then
    md5 "${1}" 2> /dev/null
  else
    warn "dotfiles: md5-compatible binary not found. Solution: fix dotfiles!"
  fi
}

if [[ "${1}" == "status" ]]; then
  status
elif [[ "${1}" == "autorun" ]]; then
  status --auto
elif [[ "${1}" == "run" ]]; then
  shift 1
  run "${@}"
elif [[ "${1}" == "reset" ]]; then
  reset
else
  help
fi
