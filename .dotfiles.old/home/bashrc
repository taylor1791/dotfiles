LOCAL_BASHRC="$HOME/.bashrc.local"

# A minimilist prompt
export PS1="\u@\h:\w\\$ "
export HISTSIZE="10000"

# Better defaults
alias ls="ls -G"
alias la="ls -AlF"
alias ll="ls -AlF"

# Correct tpye-os
alias l="ls"
alias sl="ls"
alias g="git"

alias t="tmux attach -t"
alias jpost="curl -X POST -H 'Content-Type: application/json' -d"
alias jput="curl -X PUT -H 'Content-Type: application/json' -d"

# Load direnv
eval "$(direnv hook bash)"

# Load "z"
eval "$(zoxide init bash)"

[[ -f "$LOCAL_BASHRC" ]] && source "$LOCAL_BASHRC"

# Dotfiles framework warnings
if [[ $- == *i* ]]; then # In non-interactive shells $PS1 is not set
  # Download the updates
  pushd $HOME/.dotfiles > /dev/null
  # { git fetch & disown; } 2>/dev/null

  if [[ "$(git status -s)" != "" ]]; then
    warn "There are uncommitted changed to dotfiles"
  fi

  if [[ "$(git name-rev --name-only HEAD)" != "master" ]]; then
    warn "Dotfiles are in development mode"
  elif [[ "$(git rev-parse origin/master)" != "$(git rev-parse master)" ]]; then
    warn "Updates available for dots. Run pushd ~/.dotfiles; git pull; popd"
  fi
  popd > /dev/null
fi

# Changes to the directory with the specified name, unless passed an integer.
# Integers navigate to the nth-parent defaulting to 1.
function up() {
  dir=""
  if [ -z "$1" ]; then
    dir=..
  elif [[ $1 =~ ^[0-9]+$ ]]; then
    x=0
    while [ $x -lt ${1:-1} ]; do
        dir=${dir}../
        x=$(($x+1))
    done
  else
    dir=${PWD%/$1/*}/$1
  fi
  cd "$dir";
}

function lines() {
  local start="${1}"
  local total="${2}"
  local file="${3}"
  local end="$((${start} + ${total} - 1))"
  local quit="$((${end} + 1))"

  sed -n "${start},${end}p;${quit}q" "${file}"
}
