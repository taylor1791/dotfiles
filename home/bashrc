set -eo pipefail

# A minimilist prompt
export PS1="\u@\h:\w\\$ "

# Better defaults
alias ls="ls -G"
alias la="ls -AlF"
alias ll="ls -AlF"

# Correct tpye-os
alias l="ls"
alias sl="ls"
alias g="git"

# Load nvm - node version manager
export NVM_DIR="$HOME/.nvm"
source "$NVM_DIR/nvm.sh"

# Load direnv
eval "$(direnv hook bash)"

# Download the updates
pushd $HOME/.dotfiles
{ git fetch & disown; } 2>/dev/null

function warn() {
  tput bold
  tput setaf 1
  echo "$@"
  tput sgr0
}

if [[ "$(git status -sz)" != "" ]]; then
  warn "There are uncommitted changed to dotfiles"
fi

if [[ "$(git rev-parse origin/master)" != "$(git rev-parse master)" ]]; then
  warn "Updates available for dots. Run pushd ~/.dotfiles; git pull; popd"
fi
popd

alias emoji="curl -N https://emoji.codes/family 2>/dev/null | grep -e ':.*:' | shuf | head -1 | grep -o ':.*:'"

# Changes to the directory with the specified name, unless passed an integer.
# Integers navigate to the nth-parent defaulting to 1.
function up() {
  dir=""
  if [ -z "$1" ]; then
    dir=..
  elif [[ $1 =~ ^[0-9]+$ ]]; then
    x=0
    while [ $x -lt ${1:-1} ]; do
        dir=${dir}../
        x=$(($x+1))
    done
  else
    dir=${PWD%/$1/*}/$1
  fi
  cd "$dir";
}

# Tests for true color support
function truecolor() {
  awk 'BEGIN{
    s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;
    for (colnum = 0; colnum<77; colnum++) {
        r = 255-(colnum*255/76);
        g = (colnum*510/76);
        b = (colnum*255/76);
        if (g>255) g = 510-g;
        printf "\033[48;2;%d;%d;%dm", r,g,b;
        printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
        printf "%s\033[0m", substr(s,colnum+1,1);
    }
    printf "\n";
  }'
}

